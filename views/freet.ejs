<!DOCTYPE html >
<html >
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <!-- Bootstrap CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <!-- bootstrap theme -->
    <link href="css/bootstrap-theme.css" rel="stylesheet">
    <!--external css-->
    <!-- font icon -->
    <link href="css/elegant-icons-style.css" rel="stylesheet" />
    <link href="css/font-awesome.min.css" rel="stylesheet" />

    <!-- Custom styles -->

  <link href="css/widgets.css" rel="stylesheet">
    <link href="css/style.css" rel="stylesheet">
    <link href="css/style-responsive.css" rel="stylesheet" />
  <link href="css/xcharts.min.css" rel=" stylesheet">
  <link href="css/jquery-ui-1.10.4.min.css" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>



  </head>
  <body>
    <!-- container section start -->
    <section id="container" class="">

      <aside>
          <div id="sidebar" class="nav-collapse " tabindex="5000" style="overflow: hidden; outline: none;">
              <!-- sidebar menu start-->
              <ul class="sidebar-menu">
                  <li class="">
                      <a class="" href="/">
                          <i class="icon_house_alt"></i>
                          <span>Home</span>
                      </a>
                  </li>
                  <li class="active">
                      <a class="active" href="/freet">
                          <span>Free tracking</span>
                      </a>
                  </li>
                  <li>
                      <a class="" href="/hdiw">
                          <span>How to use it</span>
                      </a>
                  </li>
                  <li>
                      <a class="" href="/about">
                          <span>About</span>
                      </a>
                  </li>

              </ul>
              <!-- sidebar menu end-->
          </div>
      </aside>


        <!--main content start-->
        <section id="main-content">
            <section class="wrapper">
              <div class="col-lg-9 col-md-12"align="center">
                <h1 class="center"><b><%= title %></b></h1>
                <p class="center">Welcome to <%= title %></p>
              </div>

                <!--overview start-->
                <div class="row">
                  <div class="col-lg-9 col-md-12">
                    <h3 class="page-header"><i class="fa fa fa-bars"></i> Demo of <b>Al-Qatta</b> vision Algorithm</h3>
                    <ol class="breadcrumb">
                      <li><i class="fa fa-home"></i><a href="/">Home</a></li>
                      <li><i class="fa fa-bars"></i>Pages</li>
                      <li><i class="fa fa-square-o"></i>detection</li>
                    </ol>
                  </div>
                </div>

          <div class="row">
            <section class="panel col-lg-9 col-md-12">
              <div class="alert alert-block alert-success fade in text-center">
                  <strong>Please try to keep your face out of the frame because dtccl have an affinity for faces. </strong>
              </div>

              <div id="mainD" class="panel-body text-center"></div>
                  <div class="btn-group btn-block" data-toggle="buttons">
                  <button type="button" id="dBtn" class=" d1-class btn btn-primary btn-block"><span class="icon_camera_alt"></span>Take a picture</button>
                  <button type="button" id="tBtn" class=" btn btn-danger btn-block disabled">Track</button>
              </div>
              <div id="sideD" class="panel-body text-center"></div>
              </div>
            </section>
          </div>
            </section>
          </div>
            </section>
        </section>
        <!--main content end-->
    </section>







<script type="text/javascript" src="//code.jquery.com/jquery-1.11.3.min.js"></script>
<script type="text/javascript" src ="javascripts/imscale.js"> </script>

    <script>
      var socket = io();
      var errorCallback = function(e) {
        console.log('Reeeejected!', e);
      };
      var detec = true;
      var init = false;
      var cset = true;
      var dname ="";
      var canvasMouseX;
      var canvasMouseY;
      var storedLines = [];
      var radius = 7;
      var packet = {};
      packet.set = false;

      navigator.getUserMedia  = navigator.getUserMedia ||
                          navigator.webkitGetUserMedia ||
                          navigator.mozGetUserMedia ||
                          navigator.msGetUserMedia;

      var video = document.createElement('video');

      var scaleF = 640/320;
      var imscale = new ImageUploader({
            maxWidth: 320,
            quality: 0.95,
            //timeout: 5000,
            debug : true
        });
      video.autoplay = true;
      video.clientWidth = 640;
      video.clientHeight = 480;

      var newDs= {name:'',obj:[]};
      var dBtn = document.getElementById('dBtn');
      var tBtn = document.getElementById('tBtn');
      var cshow = document.createElement('canvas');
      cshow.setAttribute("id", "cshow");
      var canvas = document.createElement('canvas');

      var ctx = canvas.getContext('2d');
      var cstx = cshow.getContext('2d');
      var imToUp ;
      var localStream= null;
      var count = 2;
      var addc = 0;
      // var document.body.appendChild(cshow);
      function newim(){
        if(!localStream){
          alert("You didn't allow DTCCL to use your webcam!!! \n Please refresh the page and allow DTCCL to use your webcam. \n Or consult the 'How to use it' for more info." );
        }else{
        canvas.width = 640;
        canvas.height = 480;
        cshow.width = 640;
        cshow.height = 480;
        cstx.drawImage(video, 0, 0,640,480);
        if(cset){
        document.getElementById('mainD').appendChild(cshow);
        $("#cshow").mousedown(function (e) {
            console.log("clicked");
            handleMouseDown(e);
        });
        cset = false;
      }
         snap();
         socket.emit('detect',imToUp);
         document.getElementById('sideD').innerHTML = '<div class="panel-primary"> <div class="panel-heading  text-center"><b>Please choose object to track<b>'
         +'</div> <div class="panel-content text-center"><h4><b>You can do that by clicking at the top left corner of the object and cliking a second time at the battom right corner.'
         +'If you got it wrong don\'t worry, just click anywhere in the picture and the box will disapear. And you can repeat the process. <b><h4></div></div>';
       }
      }
      function newtrack(){
        if(packet.set){
          snap();
          packet.data = imToUp;
          init = true;
          socket.emit('initialize',packet);
        }else{
          alert("You didn't chose an object to track!!! \n Please choose object to track." );
        }
      }
      function snap() {
        if (localStream) {

          ctx.drawImage(video, 0, 0,640,480);

          imToUp = imscale.scaleImage(canvas);


        }
      }
      socket.on('disconnect',function(data){
      console.log("disconnect.................");
      window.setTimeout(newtrack,1000);
      })
      socket.on('reinit',function(data){
        snap();
        packet.data = imToUp;
        socket.emit('initialize',packet);
      })
      socket.on('receive',function(data){
        if(init){
          snap();
        }
      })
      socket.on('detect',function(data){
        try{
        var detections = JSON.parse(data);
        tBtn.setAttribute("class", "btn btn-danger btn-block");
        dname = detections.name ;

        }catch(err){
          console.log(err);
        }
      });
      socket.on('track',function(data){
        try{
          socket.emit('track',imToUp);
          var detections = JSON.parse(data);
          console.log(detections);
          cstx.drawImage(canvas, 0, 0, canvas.width, canvas.height);
          if(detections.found == "true"){
            cstx.lineWidth = 2;
            cstx.strokeStyle = 'blue';
            ctx.arc(scaleF*detections.center.x,scaleF*detections.center.y,15,0,2*Math.PI);
            cstx.strokeStyle = 'red';
            cstx.strokeRect(scaleF*detections.center.x - 5, scaleF*detections.center.y -5 , 10, 10);
            cstx.beginPath();
            cstx.moveTo(scaleF*detections.points[0].x, scaleF*detections.points[0].y);
            cstx.lineTo(scaleF*detections.points[1].x, scaleF*detections.points[1].y);
            cstx.lineTo(scaleF*detections.points[2].x, scaleF*detections.points[2].y);
            cstx.lineTo(scaleF*detections.points[3].x, scaleF*detections.points[3].y);
            cstx.lineTo(scaleF*detections.points[0].x, scaleF*detections.points[0].y);
            cstx.lineWidth = 2;
            cstx.strokeStyle = 'red';
            cstx.stroke();
          }
        }catch(err){
          console.log(err);
        }
      })
      dBtn.addEventListener('click', newim, false);
      tBtn.addEventListener('click', newtrack, false);
      var vgaConstraints = {
        video: {
          mandatory: {
            maxWidth: 640,
            maxHeight: 480
          }
        }
      };
      if (navigator.getUserMedia) {
      navigator.getUserMedia(vgaConstraints, function(stream) {
        if (window.URL) {
          video.src = window.URL.createObjectURL(stream);
        } else {
          video.src = stream;
        }
        localStream = stream;
        cstx.drawImage(video, 0, 0,640,480);
        imToUp = imscale.scaleImage(canvas);

      }, errorCallback);
      } else {
      video.src = ''; // fallback.
      }

      ////////////******////////////////////
      function clearDiv(elementID){
            document.getElementById(elementID).innerHTML = "";
      }

      function intialize(data){

        packet.name = data.name;
        packet.data = imToUp;
        packet.x = data.x;
        packet.y = data.y;
        packet.width = data.w;
        packet.height = data.h;
        socket.emit('initialize',packet);
      }
      ///////////// jquery

      function handleMouseDown(e) {
          var canvasOffset = $("#cshow").offset();
          var offsetX = canvasOffset.left;
          var offsetY = canvasOffset.top;
          canvasMouseX = parseInt(e.clientX - offsetX);
          canvasMouseY = parseInt(e.clientY - offsetY);

          storedLines.push({
              x: canvasMouseX,
              y: canvasMouseY
          });
          if (storedLines.length == 1) {
              cstx.fillStyle = "green";
              cstx.beginPath();
              cstx.arc(canvasMouseX, canvasMouseY, radius, 0, 2 * Math.PI, false);
              cstx.fill();
          } else if(storedLines.length == 2) {
              cstx.rect(storedLines[0].x,storedLines[0].y,storedLines[1].x - storedLines[0].x, storedLines[1].y - storedLines[0].y);
              packet.set = true;
              console.log(dname);
              packet.name = dname;
              packet.x = storedLines[0].x/scaleF;
              packet.y = storedLines[0].y/scaleF;
              packet.width = (storedLines[1].x - storedLines[0].x)/scaleF;
              packet.height = (storedLines[1].y - storedLines[0].y)/scaleF;
              console.log(packet);
              cstx.stroke();
          }else{
          cstx.drawImage(canvas, 0, 0, canvas.width, canvas.height);
          storedLines = [];
          }
      }

    </script>
  </body>
</html>
